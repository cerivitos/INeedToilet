{
  "version": 3,
  "file": "components.css",
  "sources": [
    "..\\src\\components\\PlaceList.svelte",
    "..\\src\\components\\Mapbox.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import {\r\n    currentLat,\r\n    currentLong,\r\n    searchString,\r\n    selectedIndex,\r\n    geoPermissionGranted,\r\n    showModal\r\n  } from \"../store/store.js\";\r\n  import PlaceListItem from \"./PlaceListItem.svelte\";\r\n  import Searchbar from \"./Searchbar.svelte\";\r\n  import { calculateDistance } from \"../util.js\";\r\n  import { onMount, getContext } from \"svelte\";\r\n\r\n  let map, createMarker;\r\n  let toilets;\r\n\r\n  onMount(() => {\r\n    fetch(\"data/toilets.geojson\")\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        toilets = json.features;\r\n      });\r\n\r\n    //Get references to the map and createMarker functions to enable control from this component\r\n    const { getMap, getCreateMarker } = getContext(\"mapContextKey\");\r\n    map = getMap();\r\n    createMarker = getCreateMarker();\r\n\r\n    currentMapCenter = map.getCenter();\r\n    map.on(\"dragend\", e => {\r\n      currentMapCenter = map.getCenter();\r\n    });\r\n  });\r\n\r\n  let filtered = [];\r\n  let currentMapCenter;\r\n\r\n  function receiveKeyPress(event) {\r\n    const key = event.detail.key;\r\n\r\n    if ($selectedIndex < filtered.length - 1 && key === \"ArrowDown\") {\r\n      selectedIndex.update(selectedIndex => selectedIndex + 1);\r\n    } else if ($selectedIndex > 0 && key === \"ArrowUp\") {\r\n      selectedIndex.update(selectedIndex => selectedIndex - 1);\r\n    } else if (filtered.length > 0 && key === \"Enter\") {\r\n      currentLat.set(filtered[$selectedIndex].geometry.coordinates[1]);\r\n      currentLong.set(filtered[$selectedIndex].geometry.coordinates[0]);\r\n      searchString.set(\"\");\r\n      showModal.set(true);\r\n    }\r\n  }\r\n\r\n  $: if ($searchString.length > 0) {\r\n    selectedIndex.set(0);\r\n\r\n    filtered = toilets.filter(\r\n      item =>\r\n        item.properties.name\r\n          .toLowerCase()\r\n          .includes($searchString.toLowerCase()) ||\r\n        item.properties.address\r\n          .toLowerCase()\r\n          .includes($searchString.toLowerCase())\r\n    );\r\n\r\n    let referenceCenter;\r\n    let distance;\r\n    if ($geoPermissionGranted) {\r\n      referenceCenter = { lat: $currentLat, lng: $currentLong };\r\n    } else {\r\n      referenceCenter = currentMapCenter;\r\n    }\r\n\r\n    filtered.forEach(filteredItem => {\r\n      distance = calculateDistance(\r\n        referenceCenter.lat,\r\n        referenceCenter.lng,\r\n        filteredItem.geometry.coordinates[1],\r\n        filteredItem.geometry.coordinates[0],\r\n        \"K\"\r\n      );\r\n      filteredItem.distance = distance;\r\n    });\r\n\r\n    filtered.sort((first, second) => first.distance - second.distance);\r\n  } else {\r\n    selectedIndex.set(0);\r\n    filtered = [];\r\n  }\r\n</script>\r\n\r\n<style>.searchList{max-height:16rem}@media screen and (min-width:768px){.searchList{max-height:32rem}}</style>\r\n\r\n<div class=\"fixed px-2 py-4 w-full lg:w-1/3 z-10\">\r\n  <Searchbar on:keyboard={e => receiveKeyPress(e)}/>\r\n  <div\r\n    class=\"searchList w-full overflow-auto mt-1 rounded-lg bg-backgroundColor shadow\"\r\n  >\r\n    {#each filtered as place, i} <PlaceListItem placeObj={place} key={i}\r\n    selected={$selectedIndex === i ? true : false}/> {/each}\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import mapboxgl from \"mapbox-gl\";\r\n  import {\r\n    currentLat,\r\n    currentLong,\r\n    homeLat,\r\n    homeLong,\r\n    searchString,\r\n    showModal\r\n  } from \"../store/store.js\";\r\n  import { onMount, setContext } from \"svelte\";\r\n  import { mapBoxKey } from \"../keys.js\";\r\n  import { inBounds } from \"../util.js\";\r\n\r\n  const darkStyle = \"mapbox://styles/mapbox/dark-v10?optimize=true\";\r\n  const lightStyle = \"mapbox://styles/mapbox/light-v10?optimize=true\";\r\n\r\n  let map;\r\n  let toiletMarker;\r\n  let markers = [];\r\n  const detailZoomLevel = 12;\r\n  let currentMarker;\r\n\r\n  onMount(() => {\r\n    mapboxgl.accessToken = mapBoxKey;\r\n    map = new mapboxgl.Map({\r\n      container: \"map\",\r\n      style: lightStyle,\r\n      zoom: 12,\r\n      center: [$currentLong, $currentLat],\r\n      maxBounds: new mapboxgl.LngLatBounds(\r\n        [103.552401, 1.166388],\r\n        [104.031162, 1.50694]\r\n      )\r\n    });\r\n\r\n    map.on(\"load\", () => {\r\n      map.addSource(\"toilets\", {\r\n        type: \"geojson\",\r\n        data: \"/data/toilets.geojson\",\r\n        cluster: true,\r\n        clusterMaxZoom: detailZoomLevel,\r\n        clusterRadius: 40\r\n      });\r\n\r\n      map.addLayer({\r\n        id: \"clusters\",\r\n        type: \"circle\",\r\n        source: \"toilets\",\r\n        filter: [\"has\", \"point_count\"],\r\n        paint: {\r\n          \"circle-opacity\": 0.8,\r\n          \"circle-color\": [\r\n            \"step\",\r\n            [\"get\", \"point_count\"],\r\n            \"#b1cbe2\",\r\n            20,\r\n            \"#8da5ba\",\r\n            50,\r\n            \"#567189\"\r\n          ],\r\n          \"circle-radius\": [\"step\", [\"get\", \"point_count\"], 20, 20, 40, 50, 60]\r\n        }\r\n      });\r\n\r\n      map.addLayer({\r\n        id: \"cluster-count\",\r\n        type: \"symbol\",\r\n        source: \"toilets\",\r\n        filter: [\"has\", \"point_count\"],\r\n        layout: {\r\n          \"text-field\": \"{point_count_abbreviated}\",\r\n          \"text-font\": [\"Roboto Medium\", \"Arial Unicode MS Bold\"],\r\n          \"text-size\": [\"step\", [\"get\", \"point_count\"], 14, 20, 18, 30, 24]\r\n        },\r\n        paint: {\r\n          \"text-color\": \"#ffffff\"\r\n        }\r\n      });\r\n\r\n      map.addLayer({\r\n        id: \"unclustered-point\",\r\n        type: \"circle\",\r\n        source: \"toilets\",\r\n        filter: [\"!\", [\"has\", \"point_count\"]],\r\n        paint: {\r\n          \"circle-color\": [\r\n            \"step\",\r\n            [\"get\", \"rating\"],\r\n            \"#fc8181\",\r\n            2,\r\n            \"#f6ad55\",\r\n            3,\r\n            \"#f6ad55\",\r\n            4,\r\n            \"#68d391\",\r\n            5,\r\n            \"#48bb78\",\r\n            6,\r\n            \"#4fd1c5\"\r\n          ],\r\n          \"circle-opacity\": 0.8,\r\n          \"circle-radius\": [\r\n            \"interpolate\",\r\n            [\"linear\"],\r\n            [\"zoom\"],\r\n            0,\r\n            15,\r\n            10,\r\n            10,\r\n            20,\r\n            8\r\n          ],\r\n          \"circle-stroke-width\": 1,\r\n          \"circle-stroke-color\": [\r\n            \"step\",\r\n            [\"get\", \"rating\"],\r\n            \"#f51414\",\r\n            2,\r\n            \"#eb8205\",\r\n            3,\r\n            \"#eb8205\",\r\n            4,\r\n            \"#09963f\",\r\n            5,\r\n            \"#089944\",\r\n            6,\r\n            \"#0db5a6\"\r\n          ]\r\n        }\r\n      });\r\n\r\n      map.on(\"click\", \"unclustered-point\", e => {\r\n        let clickedFeature = map.queryRenderedFeatures(e.point, {\r\n          layers: [\"unclustered-point\"]\r\n        })[0];\r\n\r\n        const clickedAddress = clickedFeature.properties.address;\r\n        fetch(\"/data/toilets.geojson\").then(response =>\r\n          response.json().then(geoJson => {\r\n            geoJson.features.forEach(feature => {\r\n              if (feature.properties.address === clickedAddress) {\r\n                currentLat.set(feature.geometry.coordinates[1]);\r\n                currentLong.set(feature.geometry.coordinates[0]);\r\n                searchString.set(\"\");\r\n                showModal.set(true);\r\n              }\r\n            });\r\n          })\r\n        );\r\n      });\r\n\r\n      map.on(\"mouseenter\", \"unclustered-point\", () => {\r\n        map.getCanvas().style.cursor = \"pointer\";\r\n      });\r\n      map.on(\"mouseleave\", \"unclustered-point\", () => {\r\n        map.getCanvas().style.cursor = \"\";\r\n      });\r\n\r\n      map.on(\"click\", \"clusters\", e => {\r\n        let features = map.queryRenderedFeatures(e.point, {\r\n          layers: [\"clusters\"]\r\n        });\r\n        let clusterId = features[0].properties.cluster_id;\r\n        map\r\n          .getSource(\"toilets\")\r\n          .getClusterExpansionZoom(clusterId, (err, zoom) => {\r\n            if (err) return;\r\n\r\n            map.easeTo({\r\n              center: features[0].geometry.coordinates,\r\n              zoom: zoom\r\n            });\r\n          });\r\n      });\r\n\r\n      map.on(\"mouseenter\", \"clusters\", () => {\r\n        map.getCanvas().style.cursor = \"pointer\";\r\n      });\r\n      map.on(\"mouseleave\", \"clusters\", () => {\r\n        map.getCanvas().style.cursor = \"\";\r\n      });\r\n\r\n      //Hide modal if clicking anywhere on map without a marker to help navigation on small screens\r\n      map.on(\"click\", () => {\r\n        if ($showModal) {\r\n          showModal.set(false);\r\n          document.title = \"SGtoilet | Toilets in Singapore\";\r\n        }\r\n      });\r\n    });\r\n\r\n    //Export the reference to the map and createMarker function for use in PlaceList component\r\n    setContext(\"mapContextKey\", {\r\n      getMap: () => map,\r\n      getCreateMarker: () => createMarker\r\n    });\r\n  });\r\n\r\n  function createMarker() {\r\n    console.log(\r\n      `currentLat: ${$currentLat} currentLong: ${$currentLong} homeLat: ${$homeLat} homeLong: ${$homeLong}`\r\n    );\r\n\r\n    if (\r\n      $currentLat !== 1.29027 &&\r\n      $currentLong !== 103.851959 &&\r\n      $homeLat !== $currentLat &&\r\n      $homeLong !== $currentLong\r\n    ) {\r\n      currentMarker = new mapboxgl.Marker().setLngLat([\r\n        $currentLong,\r\n        $currentLat\r\n      ]);\r\n      currentMarker.addTo(map);\r\n\r\n      currentMarker\r\n        .getElement()\r\n        .firstChild.firstChild.children[1].setAttribute(\"fill\", \"#ff4d4d\");\r\n    } else if ($currentLat === $homeLat && $currentLong === $homeLong) {\r\n      currentMarker = new mapboxgl.Marker().setLngLat([\r\n        $currentLong,\r\n        $currentLat\r\n      ]);\r\n      currentMarker.addTo(map);\r\n\r\n      const markerElement = document.getElementsByClassName(\r\n        \"mapboxgl-marker\"\r\n      )[0];\r\n\r\n      let currentSvg = markerElement.firstChild;\r\n      currentSvg.parentNode.removeChild(currentSvg);\r\n\r\n      markerElement.innerHTML =\r\n        \"<svg style='background-image: url(https://media.giphy.com/media/Bfa45K0r6cCIw/giphy.gif);' height = '20px' width = '20px'><circle cx = '50%' cy = '50%' r = '7px'></circle><circle class = 'pulse' cx = '50%' cy = '50%' r = '10px'></circle></svg>\";\r\n    }\r\n\r\n    window.history.pushState(\r\n      {\r\n        lat: $currentLat,\r\n        long: $currentLong,\r\n        modal: $showModal\r\n      },\r\n      null,\r\n      \"?lat=\" + $currentLat + \"&long=\" + $currentLong\r\n    );\r\n  }\r\n\r\n  $: if (map !== undefined) {\r\n    map.easeTo({\r\n      center: [$currentLong, $currentLat],\r\n      zoom: detailZoomLevel + 1\r\n    });\r\n\r\n    if (currentMarker !== undefined) currentMarker.remove();\r\n    createMarker();\r\n  }\r\n</script>\r\n\r\n<style>.marker{stroke:#87cefa;stroke-width:2px;stroke-opacity:1}.pulse{fill:#fff;fill-opacity:0;-webkit-transform-origin:50% 50%;transform-origin:50% 50%;-webkit-animation-duration:2s;animation-duration:2s;-webkit-animation-name:pulse;animation-name:pulse;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite}@-webkit-keyframes pulse{0%{stroke-width:3px;stroke-opacity:1;-webkit-transform:scale(.3);transform:scale(.3)}to{stroke-width:0;stroke-opacity:0;-webkit-transform:scale(2);transform:scale(2)}}@keyframes pulse{0%{stroke-width:3px;stroke-opacity:1;-webkit-transform:scale(.3);transform:scale(.3)}to{stroke-width:0;stroke-opacity:0;-webkit-transform:scale(2);transform:scale(2)}}</style>\r\n\r\n<svelte:head>\r\n  <link\r\n    href=\"https://api.mapbox.com/mapbox-gl-js/v1.0.0/mapbox-gl.css\"\r\n    rel=\"stylesheet\"\r\n  />\r\n</svelte:head>\r\n\r\n<div id=\"map\" class=\"w-screen h-screen\"></div>\r\n"
  ],
  "names": [],
  "mappings": "AA4FO,0BAAW,CAAC,WAAW,KAAK,CAAC,OAAO,MAAM,CAAC,GAAG,CAAC,WAAW,KAAK,CAAC,CAAC,0BAAW,CAAC,WAAW,KAAK,CAAC,CAAC;ACuKwO,mBAAmB,oBAAK,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC,eAAe,CAAC,CAAC,kBAAkB,MAAM,EAAE,CAAC,CAAC,UAAU,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,eAAe,CAAC,CAAC,kBAAkB,MAAM,CAAC,CAAC,CAAC,UAAU,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,oBAAK,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC,eAAe,CAAC,CAAC,kBAAkB,MAAM,EAAE,CAAC,CAAC,UAAU,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,eAAe,CAAC,CAAC,kBAAkB,MAAM,CAAC,CAAC,CAAC,UAAU,MAAM,CAAC,CAAC,CAAC,CAAC"
}